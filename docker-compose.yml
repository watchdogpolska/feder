---
# yamllint disable-line-length
version: '2.1'
# This is applicationâ€™s services configuration for development purposes only.

services:
  db:
    image: mariadb:10.1
    command: >-
      --character-set-server=utf8
      --collation-server=utf8_polish_ci
      --max_allowed_packet=1024M
      --sql-mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "password"
      MYSQL_DATABASE: feder # feder3_copy
    volumes:
      - mariadb-data:/var/lib/mysql

  gulp:
    build:
      context: .
      dockerfile: .contrib/docker/Dockerfile.gulp
    ports:
      - "35729:35729"
    volumes:
      - .:/app

  web:
    build: &webBuild
      context: .
      dockerfile: .contrib/docker/Dockerfile.web
      # args:
        # PYTHON_VERSION: '${PYTHON_VERSION:-3.6.9}' # Match to production environment
        # PYTHON_VERSION: '${PYTHON_VERSION:-3.10.6}' # Match to staging environment
        # DJANGO_VERSION: '${DJANGO_VERSION:-==3.1.5}'
    volumes: &webVolumes
      - .:/code
    environment: &webEnvironment
      DATABASE_URL: mysql://root:password@db/feder3_copy
      ELASTICSEARCH_URL: http://elasticsearch:9200/
      APACHE_TIKA_URL: 'http://tika:9998/'
      # APACHE_TIKA_URL: 'http://192.168.100.120:9998/'
      MEDIA_ROOT_ENV: 'media_prod'
      DJANGO_EMAIL_BACKEND: "django.core.mail.backends.smtp.EmailBackend"
      DJANGO_EMAIL_HOST: "maildump"
      DJANGO_EMAIL_PORT: "1025"
      DJANGO_EMAIL_USE_TLS: "False"
      DJANGO_EMAIL_HOST_PASSWORD: ""
      DJANGO_EMAIL_HOST_USER: "feder_dev@dev.fedrowanie.siecobywatelska.pl"
      DJANGO_EMAIL_SUBJECT_PREFIX: "[feder_dev] "
      DJANGO_EMAIL_NOTIFICATION: "no-reply@siecobywatelska.pl"
      DJANGO_DEFAULT_FROM_EMAIL: "feder_dev <noreply@dev.fedrowanie.siecobywatelska.pl>"
      LETTER_RECEIVE_SECRET: "dev_letter_rec_very_secret"
      APP_MODE: "DEV"
      ROSETTA_AZURE_CLIENT_SECRET: ${ROSETTA_AZURE_CLIENT_SECRET}
      MY_INTERNAL_IP: ${MY_INTERNAL_IP}
      VIRUSTOTAL_API_KEY: ""
      ATTACHMENTSCANNER_API_KEY: ""
      ATTACHMENTSCANNER_API_URL: ""
      METADEFENDER_API_KEY: ${METADEFENDER_API_KEY}
      FILE_TO_TEXT_URL: ${FILE_TO_TEXT_URL}
      FILE_TO_TEXT_TOKEN: ${FILE_TO_TEXT_TOKEN}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_LLM_MODEL: ${OPENAI_LLM_MODEL}
      OPENAI_LLM_MODEL_MAX_TOKENS: ${OPENAI_LLM_MODEL_MAX_TOKENS:-4000}
      OPENAI_LLM_MODEL_LARGE: ${OPENAI_LLM_MODEL_LARGE}
      OPENAI_LLM_MODEL_LARGE_MAX_TOKENS: ${OPENAI_LLM_MODEL_LARGE_MAX_TOKENS:-16000}
    ports:
      - "8000:8000"
    # Following allows to execute `docker attach feder_web_1`
    # necessary when using ipdb in development:
    stdin_open: true
    tty: true

# *
# * for debugging purposes it is better to run worker in VScode launch on web container
# *
#  worker:
#    command: python manage.py process_tasks
#    build: *webBuild
#    volumes: *webVolumes
#    environment: *webEnvironment

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
    environment:
      discovery.type: single-node
      cluster.routing.allocation.disk.threshold_enabled: 'false'
    ports:
      - "9200:9200"

  tika:
    image: quay.io/watchdogpolska/apache-tika

  maildump:
    build:
      context: .
      dockerfile: .contrib/docker/Dockerfile.maildump

    volumes:
      - maildump_data:/data
    ports:
      - "1080:1080"
      - "1025:1025"

  #
  # To use email reception uncomment below section and fill in your dev IMAP
  # mailbox secrets in imap-to-webhook-url.env
  #
  # imap-to-webhook-feder:
  #   image: quay.io/watchdogpolska/imap-to-webhook:latest
  #   environment:
  #     WEBHOOK_URL: "http://web:8000/listy/webhook?secret=dev_letter_rec_very_secret"
  #     SENTRY_DSN: ""
  #     SENTRY_ENVIRONMENT: "feder-dev"
  #     COMPRESS_EML: "True"
  #   env_file:
  #     - secrets_imap-to-webhook-url.env

volumes:
  mariadb-data:
  maildump_data:
